{"version":3,"sources":["constants/Schedule2024.js","components/ScheduleTable/ScheduleTable.js","App.js","reportWebVitals.js","index.js"],"names":["Schedule2024November","Date","Time","Day","Opponent","Subtext","Price","IsAvailable","Schedule2024December","ScheduleTableRows","schedule","rows","forEach","game","index","moment","push","className","ScheduleTable","scope","defaultProps","ReactGA","initialize","pageview","window","location","pathname","search","App","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAAMA,G,YAAuB,CACzB,CACIC,KAAM,qBACNC,KAAM,UACNC,IAAK,WACLC,SAAU,iBACVC,SAAS,EACTC,MAAO,GACPC,aAAa,GAEjB,CACIN,KAAM,sBACNC,KAAM,UACNC,IAAK,WACLC,SAAU,kBACVC,SAAS,EACTC,MAAO,IACPC,aAAa,GAEjB,CACIN,KAAM,sBACNC,KAAM,UACNC,IAAK,SACLC,SAAU,wBACVC,SAAS,EACTC,MAAO,GACPC,aAAa,KAIfC,EAAuB,CACzB,CACIP,KAAM,qBACNC,KAAM,UACNC,IAAK,UACLC,SAAU,oBACVC,SAAS,EACTC,MAAO,GACPC,aAAa,I,+BClCfE,EAAoB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAClBC,EAAO,GAwCb,OAtCAD,EAASE,SAAQ,SAACC,EAAMC,GACTC,IAAOF,EAAKZ,KAAM,iBAElBc,OAIXJ,EAAKK,KACD,qBAAIC,UAAS,mBAAcJ,EAAKN,YAAc,GAAK,yBAAnD,UACI,qBAAIU,UAAU,sBAAd,UACI,qBAAKA,UAAU,kBAAf,SACKJ,EAAKZ,OAEV,qBAAKgB,UAAU,iBAAf,mBACQJ,EAAKV,IADb,OAGA,qBAAKc,UAAU,kBAAf,SACKJ,EAAKX,UAGd,qBAAIe,UAAU,0BAAd,UACI,qBAAKA,UAAU,0BAAf,SACKJ,EAAKT,WAEV,qBAAKa,UAAU,yBAAf,SACKJ,EAAKR,aAGd,oBAAIY,UAAU,kBAAd,SACKJ,EAAKN,YAAL,WAAoC,EAAbM,EAAKP,OAAc,OAE/C,oBAAIW,UAAU,yBAAd,SACKJ,EAAKN,YAAc,YAAc,kBAxByCO,OA8BpFH,GAGLO,EAAgB,SAAC,GAAD,IAAER,EAAF,EAAEA,SAAF,OAClB,qBAAKO,UAAU,iBAAf,SACI,wBAAOA,UAAU,mBAAjB,UACI,gCACI,+BACI,oBAAIE,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,+BAGR,gCACI,cAAC,EAAD,CAAmBT,SAAUA,YAQ7CQ,EAAcE,aAAe,G,iBC5D7BC,IAAQC,WAAW,gBACnBD,IAAQE,SAASC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,QAwD7CC,MAtDf,WACE,OACE,sBAAKX,UAAU,MAAf,UACI,sBAAKA,UAAU,aAAf,UACI,uDACA,8EACA,4EAEJ,sBAAKA,UAAU,gCAAf,UACI,8CACU,mBAAGY,KAAK,uBAAR,kCADV,eACmE,mBAAGA,KAAK,0CAA0CC,OAAO,SAAUC,IAAI,aAAvE,0BADnE,iEAGA,0FAGA,kIAGA,wEAGA,uEAGA,8FAIJ,qBAAKd,UAAU,gCAAf,SACI,mEAIJ,qBAAKA,UAAU,gCAAf,oDAIA,qBAAKA,UAAU,gCAAf,sBAGA,cAAC,EAAD,CAAeP,SAAUV,IAEzB,qBAAKiB,UAAU,gCAAf,sBAGA,cAAC,EAAD,CAAeP,SAAUF,QC5ClBwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b05ed7a4.chunk.js","sourcesContent":["const Schedule2024November = [\r\n    {\r\n        Date: 'November 7th, 2024',\r\n        Time: '7:00 PM',\r\n        Day: 'Thursday',\r\n        Opponent: 'Calgary Flames',\r\n        Subtext: false,\r\n        Price: 90,\r\n        IsAvailable: true\r\n    },\r\n    {\r\n        Date: 'November 16th, 2024',\r\n        Time: '1:00 PM',\r\n        Day: 'Saturday',\r\n        Opponent: 'St. Louis Blues',\r\n        Subtext: false,\r\n        Price: 115,\r\n        IsAvailable: false\r\n    },\r\n    {\r\n        Date: 'November 18th, 2024',\r\n        Time: '7:00 PM',\r\n        Day: 'Monday',\r\n        Opponent: 'Columbus Blue Jackets',\r\n        Subtext: false,\r\n        Price: 90,\r\n        IsAvailable: true\r\n    },\r\n];\r\n\r\nconst Schedule2024December = [\r\n    {\r\n        Date: 'December 3rd, 2024',\r\n        Time: '7:00 PM',\r\n        Day: 'Tuesday',\r\n        Opponent: 'Detroit Red Wings',\r\n        Subtext: false,\r\n        Price: 90,\r\n        IsAvailable: true\r\n    },\r\n];\r\n\r\nexport {\r\n    Schedule2024November,\r\n    Schedule2024December\r\n};\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport './ScheduleTable.scss';\r\n\r\nconst ScheduleTableRows = ({schedule}) => {\r\n    const rows = [];\r\n\r\n    schedule.forEach((game, index) => {\r\n        let date = moment(game.Date, 'MMMM Do, YYYY');\r\n\r\n        if (date < moment()) {\r\n            return;\r\n        }\r\n\r\n        rows.push(\r\n            <tr className={`game-row ${game.IsAvailable ? '' : 'game-row--unavailable'}`} key={index}>\r\n                <td className='game-row__date-cell'>\r\n                    <div className='date-cell__date'>\r\n                        {game.Date}\r\n                    </div>\r\n                    <div className='date-cell__day'>\r\n                        {`${game.Day},`}\r\n                    </div>\r\n                    <div className='date-cell__time'>\r\n                        {game.Time}\r\n                    </div>\r\n                </td>\r\n                <td className='game-row__opponent-cell'>\r\n                    <div className='opponent-cell__opponent'>\r\n                        {game.Opponent}\r\n                    </div>\r\n                    <div className='opponent-cell__subtext'>\r\n                        {game.Subtext}\r\n                    </div>\r\n                </td>\r\n                <td className='game-row__price'>\r\n                    {game.IsAvailable ? `$${game.Price * 2}` : '--'}\r\n                </td>\r\n                <td className='game-row__availability'>\r\n                    {game.IsAvailable ? 'Available' : 'Unavailable'}\r\n                </td>\r\n            </tr>\r\n        );\r\n    });\r\n\r\n    return rows;\r\n}\r\n\r\nconst ScheduleTable = ({schedule}) => (\r\n    <div className='schedule-table'>\r\n        <table className='table table-dark'>\r\n            <thead>\r\n                <tr>\r\n                    <th scope='col'>Date</th>\r\n                    <th scope='col'>Opponent</th>\r\n                    <th scope='col'>Price</th>\r\n                    <th scope='col'>Availability</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <ScheduleTableRows schedule={schedule} />\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n);\r\n\r\nScheduleTable.propTypes = {};\r\n\r\nScheduleTable.defaultProps = {};\r\n\r\nexport { ScheduleTable };\r\n","import { \r\n    Schedule2024November,\r\n    Schedule2024December\r\n} from './constants/Schedule2024';\r\nimport {ScheduleTable} from './components/ScheduleTable/ScheduleTable';\r\nimport './App.scss';\r\nimport ReactGA from 'react-ga';\r\n\r\nReactGA.initialize('G-3JXVYLQ5VZ');\r\nReactGA.pageview(window.location.pathname + window.location.search);\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <div className='text-block'>\r\n            <h1>Boston Bruins Tickets</h1>\r\n            <h3>Directly from a Bruins season ticket holder.</h3>\r\n            <h3>Below box office value. No fees. No BS.</h3>\r\n        </div>\r\n        <div className='text-block text-block--spacer'>\r\n            <div>\r\n                Text ‪<a href=\"sms:6177024741‬\">(617) 702-4741‬</a> or message <a href=\"https://www.reddit.com/user/brocilator/\" target=\"_blank\"  rel=\"noreferrer\">u/brocilator</a> on Reddit with the games you are interested in purchasing.\r\n            </div>\r\n            <div>\r\n                All payments will be made via Venmo/PayPal or Cash App.\r\n            </div>\r\n            <div>\r\n            Ticketmaster SafeTix will be transfered to your Ticketmaster account after payment is recieved.\r\n            </div>\r\n            <div>\r\n                All prices listed are for both seats.\r\n            </div>\r\n            <div>\r\n                Seats will not be sold individually.\r\n            </div>\r\n            <div>\r\n                Check offical Bruins channels for date and time changes.\r\n            </div>\r\n        </div>\r\n        <div className='text-block text-block--spacer'>\r\n            <h3> \r\n                Section 305, Row 6, Seats 7 &amp; 8\r\n            </h3>\r\n        </div>\r\n        <div className='text-block text-block--spacer'>\r\n            Boston Bruins 2024-2025 Regular Season\r\n        </div>\r\n\r\n        <div className='text-block text-block--spacer'>\r\n            November\r\n        </div>\r\n        <ScheduleTable schedule={Schedule2024November}/>\r\n\r\n        <div className='text-block text-block--spacer'>\r\n            December\r\n        </div>\r\n        <ScheduleTable schedule={Schedule2024December}/>\r\n\r\n        {/* <div className='text-block text-block--spacer-large'>\r\n            No tickets currently available.\r\n        </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}